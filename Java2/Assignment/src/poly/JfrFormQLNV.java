/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package poly;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class JfrFormQLNV extends javax.swing.JFrame {

    ArrayList<SinhVien> listSv = new ArrayList<>();
    DefaultTableModel model;
    Thread t;
    int index;

    /**
     * Creates new form JfrFormQLNV
     */
    public JfrFormQLNV() {
        index = 0;
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        data();
        fillToTable();
        showDetail();
        showTime();
        rn();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbQL = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        txtTen = new javax.swing.JTextField();
        txtTuoi = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtLuong = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        btnOpen = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnDau = new javax.swing.JButton();
        btnLui = new javax.swing.JButton();
        btnTien = new javax.swing.JButton();
        btnCuoi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblShow = new javax.swing.JTable();
        lbTime = new javax.swing.JLabel();
        lbHienTai = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        btnShow = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbQL.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbQL.setText("Quản Lý Nhân Viên");

        jLabel2.setText("MÃ NHÂN VIÊN:");

        jLabel3.setText("HỌ VÀ TÊN:");

        jLabel4.setText("TUỔI:");

        jLabel5.setText("EMAIL:");

        jLabel6.setText("LƯƠNG:");

        txtTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenActionPerformed(evt);
            }
        });

        txtTuoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTuoiActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnOpen.setText("Open");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnDau.setText("|<");
        btnDau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDauActionPerformed(evt);
            }
        });

        btnLui.setText("<<");
        btnLui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuiActionPerformed(evt);
            }
        });

        btnTien.setText(">>");
        btnTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTienActionPerformed(evt);
            }
        });

        btnCuoi.setText(">|");
        btnCuoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCuoiActionPerformed(evt);
            }
        });

        tblShow.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nhân viên", "Họ tên", "Tuổi", "Email", "Lương"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblShow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblShowMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblShow);

        lbTime.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbTime.setForeground(new java.awt.Color(255, 0, 51));
        lbTime.setText("Time");

        lbHienTai.setText("jLabel7");

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnShow.setText("show");
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbQL)
                .addGap(131, 131, 131)
                .addComponent(lbTime)
                .addGap(65, 65, 65))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(92, 92, 92)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbHienTai)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnTien)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnCuoi))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnShow)
                                        .addGap(25, 25, 25))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(btnDau)
                                .addGap(18, 18, 18)
                                .addComponent(btnLui))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(47, 47, 47)
                                .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(176, 176, 176)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnExit)
                        .addComponent(btnNew)
                        .addComponent(btnSave)
                        .addComponent(btnDelete)
                        .addComponent(btnFind)
                        .addComponent(btnOpen))
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(16, 16, 16))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtLuong, txtMaNV, txtTuoi});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbQL)
                    .addComponent(lbTime))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jLabel2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32)
                        .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNew)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave)
                            .addComponent(jLabel3))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOpen)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnShow)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnExit)
                        .addGap(40, 40, 40))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDau)
                            .addComponent(btnLui)
                            .addComponent(btnTien)
                            .addComponent(btnCuoi)
                            .addComponent(lbHienTai))
                        .addGap(25, 25, 25)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtEmail, txtLuong, txtMaNV, txtTen, txtTuoi});

        jButton1.setText("Sort By Name");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Sort By Salary");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton2});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTuoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTuoiActionPerformed

    }//GEN-LAST:event_txtTuoiActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        int choice = JOptionPane.showConfirmDialog(this, "Bạn có muốn thoát chương trình", "Thoát", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (choice == JOptionPane.YES_OPTION) {
            saveFile();
            System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        clear();
    }//GEN-LAST:event_btnNewActionPerformed

    private void txtTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        save();
        fillToTable();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        delete();
        fillToTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        findEmployeesById();
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        openFile();
        fillToTable();
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnDauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDauActionPerformed
        index = 0;
        showDetail();
    }//GEN-LAST:event_btnDauActionPerformed

    private void btnLuiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuiActionPerformed
        if (index == 0) {
            index = listSv.size() - 1;
        } else {
            index--;
        }
        showDetail();
    }//GEN-LAST:event_btnLuiActionPerformed

    private void btnTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTienActionPerformed
        if (index < listSv.size() - 1) {
            index++;
        } else {
            index = 0;
        }
        showDetail();
    }//GEN-LAST:event_btnTienActionPerformed

    private void btnCuoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCuoiActionPerformed
        index = listSv.size() - 1;
        showDetail();
    }//GEN-LAST:event_btnCuoiActionPerformed

    private void tblShowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblShowMouseClicked
        index = tblShow.getSelectedRow();
        showDetail();
    }//GEN-LAST:event_tblShowMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        sortByName();
        fillToTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        sortBySalary();
        fillToTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        update();
        fillToTable();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
        index = (listSv.size()-1) /2;
       showDetail();
    }//GEN-LAST:event_btnShowActionPerformed

    private void clear() {
        txtMaNV.setText("");
        txtTen.setText("");
        txtTuoi.setText("");
        txtLuong.setText("");
        txtEmail.setText("");
    }

    private void rn() {
        t = new Thread() {
            @Override
            public void run() {
                String line = lbQL.getText() + " ";
                while (true) {                    
                    line = line.charAt(line.length() - 1) + line.substring(0, line.length() - 1);
                    try {
                        Thread.sleep(200);
                         lbQL.setText(line);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(JfrFormQLNV.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                
            }
           
        };
        
        t.start();
    }

    private void data() {
        listSv.add(new SinhVien("NV01", "Trần Đức Phương", "phuongtdph13747@gmail.com", 19, 9000000));
        listSv.add(new SinhVien("NV02", "Nguyễn Minh Phương", "phuongnmph13595@gmail.com", 19, 6000000));
        listSv.add(new SinhVien("NV03", "Lương Hoài Nam", "namhlph12345@gmail.com", 17, 7000000));
        listSv.add(new SinhVien("NV04", "Đỗ Phương Linh", "linhtpph109283@gmail.com", 20, 8000000));
        listSv.add(new SinhVien("NV05", "Lê Đức Anh", "anhtdph932838@gmail.com", 21, 5400000));
    }

    private void save() {
        SinhVien sv = new SinhVien();

        //Check mã sinh viên
        try {
            if (checkTrung(txtMaNV.getText()) == true) {
                JOptionPane.showMessageDialog(this, "Mã đã tồn tại");
                txtMaNV.requestFocus();
                return;
            } else if (txtMaNV.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Không được để trống mã sinh viên");
                txtMaNV.requestFocus();
                return;
            } else {
                sv.setMaNv(txtMaNV.getText());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi " + e);

            return;
        }

        //Check tên sinh viên
        try {
            if (txtTen.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Không được để trống tên sinh viên");
                txtTen.requestFocus();
                return;
            } else {
                sv.setTenNv(txtTen.getText());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi " + e);
            return;
        }

        //Check tuổi 
        try {
            if (txtTuoi.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Không được để trống tuổi");
                txtTen.requestFocus();
                return;
            } else if (Integer.parseInt(txtTuoi.getText()) < 16 || Integer.parseInt(txtTuoi.getText()) > 55) {
                JOptionPane.showMessageDialog(this, "Tuổi phải nhỏ hơn 16 và lớn hơn 55");
                txtTuoi.requestFocus();
                return;
            } else {
                sv.setTuoi(Integer.parseInt(txtTuoi.getText()));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Tuổi phải là số");
            txtTuoi.requestFocus();
            return;
        }

        //Check email
        try {
            String check = "^[a-zA-Z]+[a-z0-9]*@{1}+\\w+mail.com$";
            Pattern p = Pattern.compile(check);
            Matcher m = p.matcher(txtEmail.getText());
            if (txtEmail.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Không được để trống email");
                txtEmail.requestFocus();
                return;
            } else if (m.find()) {
                sv.setEmail(txtEmail.getText());
            } else {
                JOptionPane.showMessageDialog(this, "Email không đúng định dạng");
                txtEmail.requestFocus();
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi " + e);
            return;
        }

        //Check lương
        try {
            if (txtLuong.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Không được để trống lương");
                return;
            } else if (Double.parseDouble(txtLuong.getText()) < 5000000) {
                JOptionPane.showMessageDialog(this, "Lương lớn hơn 5.000.000");
                return;
            } else {
                sv.setLuong(Double.parseDouble(txtLuong.getText()));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lương phải là số");
            txtLuong.requestFocus();
            return;
        }
         listSv.add(sv);
        JOptionPane.showMessageDialog(this, "Thêm thành công");
        clear();
    }

    //Đổ dữ liệu vào bảng
    private void fillToTable() {
        model = (DefaultTableModel) tblShow.getModel();
        model.setRowCount(0);
        for (SinhVien x : listSv) {
            model.addRow(new Object[]{
                x.getMaNv(), x.getTenNv(), x.getTuoi(), x.getEmail(), x.getLuong()
            });
        }
    }

    //Cập nhật
    private void update() {
        index = tblShow.getSelectedRow();
        SinhVien sv = listSv.get(index);
        sv.setMaNv(txtMaNV.getText());
        sv.setTenNv(txtTen.getText());
        sv.setTuoi(Integer.parseInt(txtTuoi.getText()));
        sv.setEmail(txtEmail.getText());
        sv.setLuong(Double.parseDouble(txtLuong.getText()));    
    }

    //Xóa nhân viên
    private void delete() {
        int index = tblShow.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Chọn dữ liệu để xóa");
            return;
        } else {
            int choice = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không ?", "Xác nhận !", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (choice == JOptionPane.YES_OPTION) {
                listSv.remove(index);
                JOptionPane.showMessageDialog(this, "Xóa thành công !");
            }
        }
    }

    //Tìm nhân viên theo mã
    public void findEmployeesById() {
        String maSinhVien = JOptionPane.showInputDialog(this, "Mời nhập mã sinh viên");

        boolean kq = false;
        for (int i = 0; i < listSv.size(); i++) {
            SinhVien sv = listSv.get(i);
            if (maSinhVien.equalsIgnoreCase(listSv.get(i).getMaNv())) {
                index = i;
                showDetail();
                kq = true;
                JOptionPane.showMessageDialog(this, "Đã tìm thấy nhân viên có mã " + maSinhVien);
                break;
            }
        }
        if (!kq) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy nhân viên có mã " + maSinhVien);
            return;
        }
    }

    //Mở file
    private void openFile() {
        try {
            ObjectInputStream ois = new ObjectInputStream(new FileInputStream("a.txt"));
            listSv = (ArrayList<SinhVien>) ois.readObject();
            ois.close();
            JOptionPane.showMessageDialog(this, "Mở file thành công");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi mở file " + e);
        }
    }

    //Lưu file
    private void saveFile() {
        try {
            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("a.txt"));
            oos.writeObject(listSv);
            oos.close();
            JOptionPane.showMessageDialog(this, "Lưu file thành công");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi " + e);
            return;
        }
    }

    //Check trùng
    private boolean checkTrung(String newName) {
        boolean check = false;
        for (SinhVien x : listSv) {
            if (x.getMaNv().equalsIgnoreCase(newName)) {
                check = true;
            }
        }
        return check;
    }

    //Sắp xếp theo tên
    public void sortByName() {
        Collections.sort(listSv, (a, b) -> a.getTenNv().compareTo(b.getTenNv()));
    }

    public void sortBySalary() {
     Collections.sort(listSv, (a, b) -> (int)(a.getLuong() - b.getLuong()));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JfrFormQLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JfrFormQLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JfrFormQLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JfrFormQLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JfrFormQLNV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCuoi;
    private javax.swing.JButton btnDau;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnLui;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnShow;
    private javax.swing.JButton btnTien;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbHienTai;
    private javax.swing.JLabel lbQL;
    private javax.swing.JLabel lbTime;
    private javax.swing.JTable tblShow;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtLuong;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtTen;
    private javax.swing.JTextField txtTuoi;
    // End of variables declaration//GEN-END:variables

    //Hiển thị thời gian
    private void showTime() {
       t = new Thread(){
           @Override
           public void run() {
               try {
                   SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss aa");
                   while (true) {
                       Date d = new Date();
                       lbTime.setText(sdf.format(d));
                        Thread.sleep(200);
                   }
                  
               } catch (InterruptedException ex) {
                   Logger.getLogger(JfrFormQLNV.class.getName()).log(Level.SEVERE, null, ex);
               }
           } 
           
       };
       t.start();
    }

    //Show vị trí
    private void showDetail() {
        SinhVien sv = listSv.get(index);
        txtTen.setText(sv.getTenNv());
        txtMaNV.setText(sv.getMaNv());
        txtEmail.setText(sv.getEmail());
        txtTuoi.setText(sv.getTuoi() + "");
        txtLuong.setText(sv.getLuong() + "");
        lbHienTai.setText((index + 1) + "/" + listSv.size()); //Hiển thị vị trí hiện tại của nhân viên
        tblShow.setRowSelectionInterval(index, index); //Table chọn dòng tương ứng
    }

}
