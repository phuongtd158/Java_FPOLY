/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;

import Helper.DatabaseHelper;
import Helper.DialogHelper;
import Model.Diem;
import Model.SinhVien;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class Jpn_QLDiem extends javax.swing.JPanel {

    ArrayList<Diem> listDiem = new ArrayList<>();
    Connection cn;
    DefaultTableModel model;
    int index;

    /**
     * Creates new form Jpn_QLDiem
     */
    public Jpn_QLDiem() {
        initComponents();
        connectionToDatabase();
        model = (DefaultTableModel) tblShow.getModel();
        loadDataToSql();

        sortByGrade();
    }

    public void connectionToDatabase() {
        cn = DatabaseHelper.ketNoi("FPL_DaoTao1");
        if (cn != null) {
            System.out.println("Kết nối thành công");
        } else {
            System.out.println("Kết nối thất bại");
            System.exit(0);
        }
    }

    public void loadDataToSql() {
        try {
            cn = DatabaseHelper.ketNoi("FPL_DaoTao1");
            String sql = "select HOTEN, STUDENTS.MASV, TIENGANH, TINHOC, GDTC, (TIENGANH + TINHOC + GDTC)/3 as DIEMTB \n"
                    + " from GRADE join STUDENTS on GRADE.MASV = STUDENTS.MASV";

            PreparedStatement stm = cn.prepareStatement(sql);

            ResultSet rs = stm.executeQuery();

            listDiem.clear();
            while (rs.next()) {
                String hoTen = rs.getString(1);
                String maSv = rs.getString(2);
                double tiengAnh = rs.getFloat(3);
                double tinHoc = rs.getFloat(4);
                double GDTC = rs.getFloat(5);
                double diemTb = rs.getDouble(6);
                listDiem.add(new Diem(maSv, tiengAnh, tinHoc, GDTC, diemTb, hoTen));
            }

            cn.close();
            stm.close();
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void loadToTable() {
        try {
            cn = DatabaseHelper.ketNoi("FPL_DaoTao1");
            String sql = "select HOTEN, STUDENTS.MASV, TIENGANH, TINHOC, GDTC, (TIENGANH + TINHOC + GDTC)/3 as DIEMTB \n"
                    + "from GRADE join STUDENTS on GRADE.MASV = STUDENTS.MASV";

            PreparedStatement stm = cn.prepareStatement(sql);

            ResultSet rs = stm.executeQuery();

            model.setRowCount(0);
            while (rs.next()) {
                String hoTen = rs.getString(1);
                String maSv = rs.getString(2);
                double tiengAnh = rs.getFloat(3);
                double tinHoc = rs.getFloat(4);
                double GDTC = rs.getFloat(5);
                double diemTb = rs.getDouble(6);
                model.addRow(new Object[]{
                    hoTen, maSv, tiengAnh, tinHoc, GDTC, diemTb
                });
            }
            if (tblShow.getRowCount() > 0) {
                index = 0;
                showDetail();
            } else {
                clear();
            }
            cn.close();
            stm.close();
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void showDetail() {

        lbTen.setText(model.getValueAt(index, 0).toString());
        txtMa.setText(model.getValueAt(index, 1).toString());
        txtTiengANh.setText(model.getValueAt(index, 2).toString());
        txtTinHoc.setText(model.getValueAt(index, 3).toString());
        txtGd.setText(model.getValueAt(index, 4).toString());
        lbDiemTb.setText(model.getValueAt(index, 5).toString());

        tblShow.setRowSelectionInterval(index, index);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtMaSearch = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        txtTiengANh = new javax.swing.JTextField();
        txtGd = new javax.swing.JTextField();
        txtTinHoc = new javax.swing.JTextField();
        lbTen = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lbDiemTb = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblShow = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Quản lý điểm sinh viên");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Mã SV:");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Search.png"))); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addGap(35, 35, 35)
                .addComponent(txtMaSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMaSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setText("Tìm kiếm");

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("Họ tên SV:");

        jLabel5.setText("Mã SV:");

        jLabel6.setText("Tin học:");

        jLabel7.setText("Tiếng anh:");

        jLabel8.setText("GDTC:");

        lbTen.setText("Họ tên sinh viên");

        jLabel9.setText("Điểm tb");

        lbDiemTb.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbDiemTb.setText("jLabel10");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtMa, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                        .addComponent(txtTiengANh)
                        .addComponent(txtTinHoc)
                        .addComponent(txtGd))
                    .addComponent(lbTen))
                .addContainerGap(94, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDiemTb)
                    .addComponent(jLabel9))
                .addGap(19, 19, 19))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lbTen))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(jLabel9)
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtTiengANh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(23, 23, 23))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(lbDiemTb)
                        .addGap(1, 1, 1)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTinHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addComponent(txtGd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(19, Short.MAX_VALUE))))
        );

        tblShow.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Họ tên SV", "Mã SV", "Tiếng anh", "Tin học", "GDTC", "Điểm TB"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblShow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblShowMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblShow);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Up.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Left.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Right.png"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Down.png"))); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Add.png"))); // NOI18N
        jButton10.setText("New");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Save.png"))); // NOI18N
        jButton11.setText("Save");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Delete.png"))); // NOI18N
        jButton12.setText("Delete");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Upload.png"))); // NOI18N
        jButton13.setText("Update");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel10.setText("3 sinh viên có điểm cao nhất:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)
                                .addComponent(jButton7)
                                .addGap(73, 73, 73)
                                .addComponent(jButton8)
                                .addGap(74, 74, 74)
                                .addComponent(jButton9))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton11)
                            .addComponent(jButton10)
                            .addComponent(jButton12)
                            .addComponent(jButton13))
                        .addContainerGap(68, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton10, jButton11, jButton12, jButton13});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7)
                            .addComponent(jButton8)
                            .addComponent(jButton9)
                            .addComponent(jButton6)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton13)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(39, 39, 39)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton10, jButton11, jButton12, jButton13});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblShowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblShowMouseClicked
        index = tblShow.getSelectedRow();
        showDetail();
    }//GEN-LAST:event_tblShowMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (txtMaSearch.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Không được để trống");
            return;
        } else if (checkTonTai(txtMaSearch.getText()) == false) {
            JOptionPane.showMessageDialog(this, "Không tồn tại sinh viên có mã " + txtMaSearch.getText());
            return;
        } else {
            try {
                cn = DatabaseHelper.ketNoi("FPL_DaoTao1");

                String sql = "select HOTEN, STUDENTS.MASV, TIENGANH, TINHOC, GDTC, (TIENGANH + TINHOC + GDTC)/3 as DIEMTB \n"
                        + "from GRADE join STUDENTS on GRADE.MASV = STUDENTS.MASV where STUDENTS.MASV = ?";

                PreparedStatement stm = cn.prepareStatement(sql);
                stm.setString(1, txtMaSearch.getText());
                ResultSet rs = stm.executeQuery();

                model.setRowCount(0);
                while (rs.next()) {
                    String hoTen = rs.getString(1);
                    String maSv = rs.getString(2);
                    double tiengAnh = rs.getFloat(3);
                    double tinHoc = rs.getFloat(4);
                    double GDTC = rs.getFloat(5);
                    double diemTb = rs.getDouble(6);
                    model.addRow(new Object[]{
                        hoTen, maSv, tiengAnh, tinHoc, GDTC, diemTb
                    });

                    if (checkTonTai(maSv) == true) {
                        JOptionPane.showMessageDialog(this, "Đã tìm thấy sinh viên có mã " + txtMaSearch.getText());
                        index = 0;
                        showDetail();
                    }
                }

                cn.close();
                stm.close();
                rs.close();
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed
    public void clear() {
        txtGd.setText("");
        txtMa.setText("");
        txtTiengANh.setText("");
        txtTinHoc.setText("");
        lbDiemTb.setText("");
        lbTen.setText("");
        txtMaSearch.setText("");
    }
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        clear();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        try {
            cn = DatabaseHelper.ketNoi("FPL_DaoTao1");

            String sql = "insert into GRADE values(?, ?, ?, ?)";
            PreparedStatement stm = cn.prepareStatement(sql);

            try {
                if (txtMa.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Mã sinh viên không được để trống");
                    return;
                } else if (checkTonTai(txtMa.getText()) == true) {
                    JOptionPane.showMessageDialog(this, "Mã sinh viên đã tồn tại");
                    return;
                } else {
                    stm.setString(1, txtMa.getText());
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            try {
                if (txtTiengANh.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Điểm không đươc để trống");
                    return;
                } else if (Double.parseDouble(txtTiengANh.getText()) < 0 || Double.parseDouble(txtTiengANh.getText()) > 10) {
                    JOptionPane.showMessageDialog(this, "Điểm phải lớn hơn 0 và nhỏ hơn 10");
                    return;
                } else {
                    stm.setFloat(2, Float.parseFloat(txtTiengANh.getText()));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            try {
                if (txtTinHoc.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Điểm không đươc để trống");
                    return;
                } else if (Double.parseDouble(txtTinHoc.getText()) < 0 || Double.parseDouble(txtTinHoc.getText()) > 10) {
                    JOptionPane.showMessageDialog(this, "Điểm phải lớn hơn 0 và nhỏ hơn 10");
                    return;
                } else {
                    stm.setFloat(3, Float.parseFloat(txtTinHoc.getText()));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            try {
                if (txtGd.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Điểm không đươc để trống");
                    return;
                } else if (Double.parseDouble(txtGd.getText()) < 0 || Double.parseDouble(txtGd.getText()) > 10) {
                    JOptionPane.showMessageDialog(this, "Điểm phải lớn hơn 0 và nhỏ hơn 10");
                    return;
                } else {
                    stm.setFloat(4, Float.parseFloat(txtGd.getText()));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            stm.executeUpdate();

            JOptionPane.showMessageDialog(this, "Thêm thành công");
            stm.close();
            cn.close();

            loadDataToSql();
            sortByGrade();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        try {
            index = tblShow.getSelectedRow();
            cn = DatabaseHelper.ketNoi("FPL_DaoTao1");
            String sql = "delete from GRADE where MASV = ?";

            PreparedStatement stm = cn.prepareStatement(sql);
            stm.setString(1, txtMa.getText());

            if (index == -1) {
                JOptionPane.showMessageDialog(this, "Chọn dòng cần xóa");
                return;
            } else if (listDiem.size() <= 0) {
                JOptionPane.showMessageDialog(this, "List sinh viên tróng");
                return;
            } else {
                if (JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không ?") == JOptionPane.YES_OPTION) {
                    stm.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Xóa thành công");
                    if (listDiem.size() > 0) {
                        index = 0;
                        showDetail();
                    } else {
                        clear();
                    }
                }
            }
            cn.close();
            stm.close();

            loadDataToSql();
            sortByGrade();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        try {
            cn = DatabaseHelper.ketNoi("FPL_DaoTao1");
            String sql = "update GRADE\n"
                    + "set TIENGANH = ?, TINHOC = ?, GDTC = ?\n"
                    + "where MASV = ?";

            PreparedStatement statement = cn.prepareStatement(sql);

            try {
                if (txtTiengANh.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Điểm không đươc để trống");
                    return;
                } else if (Double.parseDouble(txtTiengANh.getText()) < 0 || Double.parseDouble(txtTiengANh.getText()) > 10) {
                    JOptionPane.showMessageDialog(this, "Điểm phải lớn hơn 0 và nhỏ hơn 10");
                    return;
                } else {
                    statement.setDouble(1, Double.parseDouble(txtTiengANh.getText()));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            try {
                if (txtTinHoc.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Điểm không đươc để trống");
                    return;
                } else if (Double.parseDouble(txtTinHoc.getText()) < 0 || Double.parseDouble(txtTinHoc.getText()) > 10) {
                    JOptionPane.showMessageDialog(this, "Điểm phải lớn hơn 0 và nhỏ hơn 10");
                    return;
                } else {
                    statement.setDouble(2, Double.parseDouble(txtTinHoc.getText()));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            try {
                if (txtGd.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Điểm không đươc để trống");
                    return;
                } else if (Double.parseDouble(txtGd.getText()) < 0 || Double.parseDouble(txtGd.getText()) > 10) {
                    JOptionPane.showMessageDialog(this, "Điểm phải lớn hơn 0 và nhỏ hơn 10");
                    return;
                } else {
                    statement.setDouble(3, Double.parseDouble(txtGd.getText()));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            try {
                if (checkTonTai(txtMa.getText()) == false) {
                    JOptionPane.showMessageDialog(this, "Mã sinh viên không tồn tại");
                    return;
                } else {
                    statement.setString(4, txtMa.getText());
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            statement.executeUpdate();

            JOptionPane.showMessageDialog(this, "Cập nhật thành công");
            cn.close();
            statement.close();
            loadDataToSql();
            sortByGrade();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        index = 0;
        showDetail();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        index = 2;
        showDetail();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (index > 0) {
            index--;
        }
        showDetail();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (index < listDiem.size() - 1) {
            index++;
        }
        showDetail();
    }//GEN-LAST:event_jButton8ActionPerformed

    public boolean checkTonTai(String maSv) {
        boolean check = false;
        for (Diem x : listDiem) {
            if (x.getMaSv().equals(maSv)) {
                check = true;
            }

        }
        return check;
    }

    public void sortByGrade() {

        try {
            Comparator comparator = new Comparator<Diem>() {
                @Override
                public int compare(Diem o1, Diem o2) {
                    Double d1 = o1.getDiemTb();
                    Double d2 = o2.getDiemTb();
                    return d2.compareTo(d1);
                }

            };
            Collections.sort(listDiem, comparator);

            model.setRowCount(0);
            for (int i = 0; i < 3; i++) {
                model.addRow(new Object[]{
                    listDiem.get(i).getHoTen(), listDiem.get(i).getMaSv(), listDiem.get(i).getTiengAnh(), listDiem.get(i).getTinHoc(), listDiem.get(i).getGDTC(), listDiem.get(i).getDiemTb()
                });
            }
            if (tblShow.getRowCount() > 0) {
                index = 0;
                showDetail();

            } else {
                clear();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDiemTb;
    private javax.swing.JLabel lbTen;
    private javax.swing.JTable tblShow;
    private javax.swing.JTextField txtGd;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtMaSearch;
    private javax.swing.JTextField txtTiengANh;
    private javax.swing.JTextField txtTinHoc;
    // End of variables declaration//GEN-END:variables
}
